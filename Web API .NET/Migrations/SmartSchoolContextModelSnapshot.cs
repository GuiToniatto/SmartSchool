// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web_API_.NET.Data;

namespace Web_API_.NET.Migrations
{
    [DbContext(typeof(SmartSchoolContext))]
    partial class SmartSchoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("Web_API_.NET.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Lastname")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Lastname = "Kent",
                            Name = "Marta",
                            PhoneNumber = "33225555"
                        },
                        new
                        {
                            Id = 2,
                            Lastname = "Isabela",
                            Name = "Paula",
                            PhoneNumber = "3354288"
                        },
                        new
                        {
                            Id = 3,
                            Lastname = "Antonia",
                            Name = "Laura",
                            PhoneNumber = "55668899"
                        },
                        new
                        {
                            Id = 4,
                            Lastname = "Maria",
                            Name = "Luiza",
                            PhoneNumber = "6565659"
                        },
                        new
                        {
                            Id = 5,
                            Lastname = "Machado",
                            Name = "Lucas",
                            PhoneNumber = "565685415"
                        },
                        new
                        {
                            Id = 6,
                            Lastname = "Alvares",
                            Name = "Pedro",
                            PhoneNumber = "456454545"
                        },
                        new
                        {
                            Id = 7,
                            Lastname = "José",
                            Name = "Paulo",
                            PhoneNumber = "9874512"
                        });
                });

            modelBuilder.Entity("Web_API_.NET.Models.StudentSubject", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("StudentSubjects");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            SubjectId = 2
                        },
                        new
                        {
                            StudentId = 1,
                            SubjectId = 4
                        },
                        new
                        {
                            StudentId = 1,
                            SubjectId = 5
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 1
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 2
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 5
                        },
                        new
                        {
                            StudentId = 3,
                            SubjectId = 1
                        },
                        new
                        {
                            StudentId = 3,
                            SubjectId = 2
                        },
                        new
                        {
                            StudentId = 3,
                            SubjectId = 3
                        },
                        new
                        {
                            StudentId = 4,
                            SubjectId = 1
                        },
                        new
                        {
                            StudentId = 4,
                            SubjectId = 4
                        },
                        new
                        {
                            StudentId = 4,
                            SubjectId = 5
                        },
                        new
                        {
                            StudentId = 5,
                            SubjectId = 4
                        },
                        new
                        {
                            StudentId = 5,
                            SubjectId = 5
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 1
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 2
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 3
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 4
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 1
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 2
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 3
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 4
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 5
                        });
                });

            modelBuilder.Entity("Web_API_.NET.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Matemática",
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Física",
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Português",
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Inglês",
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 5,
                            Name = "Programação",
                            TeacherId = 5
                        });
                });

            modelBuilder.Entity("Web_API_.NET.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1
                        },
                        new
                        {
                            Id = 2
                        },
                        new
                        {
                            Id = 3
                        },
                        new
                        {
                            Id = 4
                        },
                        new
                        {
                            Id = 5
                        });
                });

            modelBuilder.Entity("Web_API_.NET.Models.StudentSubject", b =>
                {
                    b.HasOne("Web_API_.NET.Models.Student", "Student")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web_API_.NET.Models.Subject", "Subject")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Web_API_.NET.Models.Subject", b =>
                {
                    b.HasOne("Web_API_.NET.Models.Teacher", "Teacher")
                        .WithMany("Subjects")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Web_API_.NET.Models.Student", b =>
                {
                    b.Navigation("StudentSubjects");
                });

            modelBuilder.Entity("Web_API_.NET.Models.Subject", b =>
                {
                    b.Navigation("StudentSubjects");
                });

            modelBuilder.Entity("Web_API_.NET.Models.Teacher", b =>
                {
                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
