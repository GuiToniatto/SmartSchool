// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web_API_.NET.Data;

namespace Web_API_.NET.Migrations
{
    [DbContext(typeof(SmartSchoolContext))]
    [Migration("20211123202950_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("Web_API_.NET.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tecnologia da Informação"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sistemas de Informação"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ciência da Computação"
                        });
                });

            modelBuilder.Entity("Web_API_.NET.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Lastname")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<int>("Registration")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lastname = "Kent",
                            Name = "Marta",
                            PhoneNumber = "33225555",
                            Registration = 1,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 582, DateTimeKind.Local).AddTicks(9206)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lastname = "Isabela",
                            Name = "Paula",
                            PhoneNumber = "3354288",
                            Registration = 2,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(1110)
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lastname = "Antonia",
                            Name = "Laura",
                            PhoneNumber = "55668899",
                            Registration = 3,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(1132)
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lastname = "Maria",
                            Name = "Luiza",
                            PhoneNumber = "6565659",
                            Registration = 4,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(1143)
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lastname = "Machado",
                            Name = "Lucas",
                            PhoneNumber = "565685415",
                            Registration = 5,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(1152)
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lastname = "Alvares",
                            Name = "Pedro",
                            PhoneNumber = "456454545",
                            Registration = 6,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(1166)
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lastname = "José",
                            Name = "Paulo",
                            PhoneNumber = "9874512",
                            Registration = 7,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(1174)
                        });
                });

            modelBuilder.Entity("Web_API_.NET.Models.StudentCourse", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("Web_API_.NET.Models.StudentSubject", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<float?>("Grade")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("StudentId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("StudentSubjects");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            SubjectId = 2,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(3666)
                        },
                        new
                        {
                            StudentId = 1,
                            SubjectId = 4,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(4412)
                        },
                        new
                        {
                            StudentId = 1,
                            SubjectId = 5,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(4417)
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 1,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(4420)
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 2,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(4421)
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 5,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(4427)
                        },
                        new
                        {
                            StudentId = 3,
                            SubjectId = 1,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(4429)
                        },
                        new
                        {
                            StudentId = 3,
                            SubjectId = 2,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(4431)
                        },
                        new
                        {
                            StudentId = 3,
                            SubjectId = 3,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(4433)
                        },
                        new
                        {
                            StudentId = 4,
                            SubjectId = 1,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(4436)
                        },
                        new
                        {
                            StudentId = 4,
                            SubjectId = 4,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(4438)
                        },
                        new
                        {
                            StudentId = 4,
                            SubjectId = 5,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(4444)
                        },
                        new
                        {
                            StudentId = 5,
                            SubjectId = 4,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(4446)
                        },
                        new
                        {
                            StudentId = 5,
                            SubjectId = 5,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(4448)
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 1,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(4451)
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 2,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(4453)
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 3,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(4455)
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 4,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(4459)
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 1,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(4461)
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 2,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(4464)
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 3,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(4466)
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 4,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(4468)
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 5,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 583, DateTimeKind.Local).AddTicks(4470)
                        });
                });

            modelBuilder.Entity("Web_API_.NET.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int?>("PrerequisiteId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("Workload")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("PrerequisiteId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Name = "Matemática",
                            TeacherId = 1,
                            Workload = 0
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 3,
                            Name = "Matemática",
                            TeacherId = 1,
                            Workload = 0
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            Name = "Física",
                            TeacherId = 2,
                            Workload = 0
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 1,
                            Name = "Português",
                            TeacherId = 3,
                            Workload = 0
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 1,
                            Name = "Inglês",
                            TeacherId = 4,
                            Workload = 0
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 2,
                            Name = "Inglês",
                            TeacherId = 4,
                            Workload = 0
                        },
                        new
                        {
                            Id = 7,
                            CourseId = 3,
                            Name = "Inglês",
                            TeacherId = 4,
                            Workload = 0
                        },
                        new
                        {
                            Id = 8,
                            CourseId = 1,
                            Name = "Programação",
                            TeacherId = 5,
                            Workload = 0
                        },
                        new
                        {
                            Id = 9,
                            CourseId = 2,
                            Name = "Programação",
                            TeacherId = 5,
                            Workload = 0
                        },
                        new
                        {
                            Id = 10,
                            CourseId = 3,
                            Name = "Programação",
                            TeacherId = 5,
                            Workload = 0
                        });
                });

            modelBuilder.Entity("Web_API_.NET.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Lastname")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<int>("Register")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lastname = "Oliveira",
                            Register = 1,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 575, DateTimeKind.Local).AddTicks(9128)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lastname = "Soares",
                            Register = 2,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 576, DateTimeKind.Local).AddTicks(9079)
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lastname = "Marconi",
                            Register = 3,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 576, DateTimeKind.Local).AddTicks(9101)
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lastname = "Carvalho",
                            Register = 4,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 576, DateTimeKind.Local).AddTicks(9104)
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lastname = "Montanha",
                            Register = 5,
                            StartDate = new DateTime(2021, 11, 23, 17, 29, 49, 576, DateTimeKind.Local).AddTicks(9105)
                        });
                });

            modelBuilder.Entity("Web_API_.NET.Models.StudentCourse", b =>
                {
                    b.HasOne("Web_API_.NET.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web_API_.NET.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Web_API_.NET.Models.StudentSubject", b =>
                {
                    b.HasOne("Web_API_.NET.Models.Student", "Student")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web_API_.NET.Models.Subject", "Subject")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Web_API_.NET.Models.Subject", b =>
                {
                    b.HasOne("Web_API_.NET.Models.Course", "Course")
                        .WithMany("Subjects")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web_API_.NET.Models.Subject", "Prerequisite")
                        .WithMany()
                        .HasForeignKey("PrerequisiteId");

                    b.HasOne("Web_API_.NET.Models.Teacher", "Teacher")
                        .WithMany("Subjects")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Prerequisite");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Web_API_.NET.Models.Course", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("Web_API_.NET.Models.Student", b =>
                {
                    b.Navigation("StudentSubjects");
                });

            modelBuilder.Entity("Web_API_.NET.Models.Subject", b =>
                {
                    b.Navigation("StudentSubjects");
                });

            modelBuilder.Entity("Web_API_.NET.Models.Teacher", b =>
                {
                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
